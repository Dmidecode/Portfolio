@page "/nofour/game/{difficultyParameter:int}/{index:int}"
@using System.Timers;
@using Portfolio.Services;
@inject NavigationManager UriHelper
@inject HttpClient Http
@inject ILocalStorageService _localstorage

@*@inject Configuration Configuration
<Heading>Url: @Configuration.UrlApiGateway</Heading>
*@
<Row>
    <Column>
        <Breadcrumb Class="breadcrumb-custom">
            <BreadcrumbItem>
                <BreadcrumbLink To="/nofour/">Difficulty</BreadcrumbLink>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <BreadcrumbLink To="@($"/nofour/level/{(int)Difficulty}")">Level</BreadcrumbLink>
            </BreadcrumbItem>
            <BreadcrumbItem Active>
                <BreadcrumbLink To="">Level @Index</BreadcrumbLink>
            </BreadcrumbItem>
        </Breadcrumb>
    </Column>
</Row>
<br />
<Row>
    <Column>
        <Heading Size="HeadingSize.Is2" TextAlignment="TextAlignment.Center">Level @Index</Heading>
    </Column>
</Row>
<Row>
    <Column>
        <Heading Size="HeadingSize.Is6" TextAlignment="TextAlignment.Center">@timeText</Heading>
    </Column>
</Row>

<br />
<Div Flex="Flex.JustifyContent.Center">
    <Button Color="Color.Secondary" Clicked="GetBack" Margin="Margin.Is1">Get back</Button>
    <Button Color="Color.Primary" Clicked="ResetGrid" Margin="Margin.Is1">Reset</Button>
    <Button Color="Color.Info" Clicked="NextLevel" Margin="Margin.Is1">Next Level</Button>
    @*<Button Color="Color.Warning" Clicked="SendScoreClick" Margin="Margin.Is1">Send Score Test</Button>*@
</Div>
<br />

@if (fileConfig == null || game == null || Cells.Length == 0)
{
    <Div Display="Display.InlineBlock">
        <SpinKit Type="SpinKitType.Chase" />
    </Div>
}
else
{
    <Row onselectstart="return false" Style="padding-left:10%;padding-right:10%">
        <Column ColumnSize="ColumnSize.Is10.OnMobile.Is4.OnDesktop.Is1.WithOffset.OnMobile.Is4.WithOffset.OnDesktop">
            @for (int w = 0; w < fileConfig.Width; w += 1)
            {
                int wIndex = w;
                <CardGroup @oncontextmenu:preventDefault="true" Style="display: flex; display: -ms-flex-flow;">
                    @for (int h = 0; h < fileConfig.Height; h += 1)
                    {
                        int hIndex = h;
                        <CellNoFour IsBase="Cells[hIndex, wIndex].IsBase" OnCallbackParent="@((args) => OnClickedCell(args.Item1, args.Item2))" OnCallbackParentMiddleCLick="@((args) => OnClickedEraseCell(args.Item1, args.Item2))" OnCallbackParentRightClick="@((args) => OnMiddleClickedCell(args.Item1, args.Item2))" X="wIndex" Y="hIndex" IsInError="Cells[hIndex, wIndex].IsInError" Status="Cells[hIndex, wIndex].Status" />
                    }
                </CardGroup>
            }
        </Column>
    </Row>

    <br />
    <SelectWhichBeforeClickButton CssClass="onlyOnSmallScreen" OnCallbackParent="@((args) => OnClickedCellFromSelectWhichBefore(args))" />
}

<Modal @ref="modalWin" @oncontextmenu:preventDefault="true">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Congratulations !</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            Well done you cleared this puzzle in @timeText !
        </ModalBody>
    </ModalContent>
</Modal>
