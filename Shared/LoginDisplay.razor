@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims;

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <Text>Hello <Text TextTransform="TextTransform.Capitalize">@context.User.Claims.FirstOrDefault(x => x.Type == "username")?.Value</Text> !</Text>

        <Button Clicked="BeginSignOut">Log out</Button>
        @*<button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>*@
    </Authorized>
    <NotAuthorized>
        <NavLink class="nav-link" href="authentication/login">
            <Span>
                <Icon Name="IconName.Key" Margin="Margin.Is3.FromEnd" />
                Log in
            </Span>
        </NavLink>
        @*<a href="authentication/login">Log in</a>*@
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}